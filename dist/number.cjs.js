"use strict";function e(e){const i=Object.prototype.toString.call(e).toLowerCase();return/\[object (.*)]/g.exec(i)[1]}function i(i,t){if(!("number"===e(i))){const r=e(i);throw new TypeError(`${t}: Expected a number but received a ${r}`)}}exports.isDecimal=function(e){return i(e,"isDecimal"),!Number.isInteger(e)},exports.isEven=function(t){return i(t,"isEven"),"number "===e(t)&&t%2==0},exports.isFinite=function(t){return i(t,"isFinite"),"number "===e(t)&&Number.isFinite(t)},exports.isInfinite=function(t){return i(t,"isInfinite"),"number "===e(t)&&!Number.isFinite(t)},exports.isInteger=function(e){return i(e,"isInteger"),Number.isInteger(e)},exports.isNatural=function(e){return i(e,"isNatural"),Number.isInteger(e)&&e>=0},exports.isNegative=function(t){return i(t,"isNegative"),"number"===e(t)&&t<0},exports.isNegativeDecimal=function(e){return i(e,"isNegativeDecimal"),!Number.isInteger(e)&&e<0},exports.isNegativeInteger=function(e){return i(e,"isNegativeInteger"),Number.isInteger(e)&&e<0},exports.isOdd=function(t){return i(t,"isOdd"),"number "===e(t)&&(t%2==1||t%2==-1)},exports.isPositive=function(t){return i(t,"isPositive"),"number"===e(t)&&t>0},exports.isPositiveDecimal=function(e){return i(e,"isPositiveInteger"),!Number.isInteger(e)&&e>0},exports.isPositiveInteger=function(e){return i(e,"isPositiveInteger"),Number.isInteger(e)&&e>0},exports.isPrime=function(e){if(i(e,"isPrime"),e<=1)return!1;for(let i=2;i<e;i++)if(e%i==0)return!1;return!0};
